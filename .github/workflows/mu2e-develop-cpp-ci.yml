name: Build otsdaq suite against develop

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_call:

jobs:
  build_against_dev_release:
    name: build_against_dev
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Delete huge unnecessary tools folder
      run: rm -rf /opt/hostedtoolcache

    - uses: cvmfs-contrib/github-action-cvmfs@main

    - name: change dir permission
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs

    - name: Cache cvmfs cache
      id: cvmfs_cache
      uses: actions/cache@main
      with:
        path: /var/lib/cvmfs/shared
        key: cachecvmfs

    - name: restore dir permission
      run: |
        sudo chown -R cvmfs.cvmfs /var/lib/cvmfs
        sudo chmod -R go-rwx /var/lib/cvmfs

    - name: test cvmfs
      run: |
        ls -l /cvmfs/fermilab.opensciencegrid.org/products/artdaq/spack_areas
    
    - name: Checkout pkg
      uses: actions/checkout@main
      with:
        repository: ${{ github.repository }}
        path: scratch/${{ github.repository }}
        fetch-depth: 0

    - name: run build in docker container with cvmfs bind mount
      run: |
      
        cd $GITHUB_WORKSPACE/scratch
        cat << EOT > build_pkg.sh
        #!/bin/bash
        
        cd /opt/mu2edaq
        source /opt/mu2edaq/setup_ots.sh || exit 1
        
        export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
        export pkgname=\${REPO//_/-}
        echo "Copying /scratch/Mu2e/\$REPO to srcs \$pkgname"
        cd srcs
        if [ -d \$pkgname ];then mv \$pkgname{,.bak}; fi
        cp -pr /scratch/Mu2e/\$REPO \$pkgname
        ls -l
        cd \$pkgname
        ls -la
        git status
        git describe --all
        git symbolic-ref HEAD
        export ref=`git describe --all`
        echo "Described current ref as \${ref}"
        branch=develop
        
        if [[ "x\${ref}" =~ "xheads/" ]]; then
            echo "Setting branch to \${ref//heads\//}"
            branch=\${ref//heads\//}
        fi

        echo "Checking out \$branch"
        cd  /opt/mu2edaq/srcs
        for pkg in */;do 
            echo "Updating package \$pkg"
            cd \$pkg
            git stash
            git checkout $branch
            git stash pop
            git pull
            cd ..
        done
                
        # Have to re-add here in case architecture is different
        cd /opt/mu2edaq
        #spack config add config:mpd_user_dir:/opt/mu2edaq/spack-repos/mpd/
        spack mpd init -r site -u /opt/mu2edaq/spack-repos/mpd
        
        echo "Starting build"
        spack mpd build 2>&1 | tee -a /scratch/Mu2e/build.log
        res=\${PIPESTATUS[0]} # Get result of first command in previous pipe, bash specific
        
        echo "Spack install completed with status code \$res"
        echo "Spack install completed with status code \$res" >>/scratch/Mu2e/build.log

        exit \$res
        EOT
        chmod +x build_pkg.sh

        docker run --rm -v /cvmfs:/cvmfs:shared -v $GITHUB_WORKSPACE/scratch:/scratch eflumerf/mu2e-spack:latest /scratch/build_pkg.sh
        
    - name: Check build log for success
      run: |
        grep "Spack install completed with status code 0" ${{ github.workspace }}/scratch/Mu2e/build.log

    - name: change dir permission again
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs
       
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-log
        path: scratch/Mu2e/build.log
