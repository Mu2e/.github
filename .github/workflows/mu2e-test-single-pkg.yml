name: Test Single Pkg Workflow (otsdaq version)

on:
  workflow_call:

jobs:

  build_single_pkg:
    name: build single pkg
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Delete huge unnecessary tools folder
      run: rm -rf /opt/hostedtoolcache

    - uses: cvmfs-contrib/github-action-cvmfs@main

    - name: change dir permission
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs

    - name: Cache cvmfs cache
      id: cvmfs_cache
      uses: actions/cache@main
      with:
        path: /var/lib/cvmfs/shared
        key: cachecvmfs

    - name: restore dir permission
      run: |
        sudo chown -R cvmfs.cvmfs /var/lib/cvmfs
        sudo chmod -R go-rwx /var/lib/cvmfs

    - name: test cvmfs
      run: |
        ls -l /cvmfs/fermilab.opensciencegrid.org/products/artdaq/spack_areas
    
    - name: Checkout pkg
      uses: actions/checkout@main
      with:
        repository: ${{ github.repository }}
        path: scratch/${{ github.repository }}

    - name: run build in docker container with cvmfs bind mount
      run: |
      
        cd $GITHUB_WORKSPACE/scratch
        cat << EOT > build_pkg.sh
        #!/bin/bash
        
        cd /opt/mu2edaq
        source /opt/mu2edaq/setup_ots.sh || exit 1
        
        export REPO=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
        mkdir /scratch/Mu2e/build_\$REPO
        cd /scratch/Mu2e/build_\$REPO
        
        export compiler=\$(spack compiler info gcc@13.1.0|grep cxx|awk '{print \$3}')
        echo "Compiler is \$compiler"
        cp /opt/mu2edaq/srcs/CMakePresets.json /scratch/${{ github.repository }}
        echo "Configuring with cmake --preset default /scratch/${{ github.repository }} -DCMAKE_CXX_COMPILER=\$compiler"
        cmake --preset default /scratch/${{ github.repository }} -DCMAKE_CXX_COMPILER=\$compiler -Wno-dev
        
        echo "Starting tests"
        make test 2>&1 | tee -a /scratch/Mu2e/build.log
        res=\${PIPESTATUS[0]} # Get result of first command in previous pipe, bash specific

        exit \$res
        EOT
        chmod +x build_pkg.sh

        docker run --rm -v /cvmfs:/cvmfs:shared -v $GITHUB_WORKSPACE/scratch:/scratch eflumerf/mu2e-spack:latest /scratch/build_pkg.sh
        
    - name: Check build log for success
      run: |
        grep "100% tests passed, 0 tests failed" ${{ github.workspace }}/scratch/Mu2e/build.log ||
        grep "No tests were found!!!" ${{ github.workspace }}/scratch/Mu2e/build.log

    - name: upload build log file
      if: always()
      uses: actions/upload-artifact@main
      with:
        name: build_log
        path: ${{ github.workspace }}/scratch/Mu2e/build.log

    - name: change dir permission again
      run: |
        sudo chmod -R go+rwx /var/lib/cvmfs
